//Вступительное задание 2 Дан корень бинарного дерева, верните его максимальную глубину. 
//Максимальная глубина бинарного дерева — это количество узлов вдоль самого длинного пути от корневого узла до самого удалённого листового узла.


using System;

public class Program
{
    //root = [3,9,20,null,null,15,7]
    public static void Main(string[] args)
    {
        TreeNode TreeNode_2R = new TreeNode(20,new TreeNode(15),new TreeNode(7));
        TreeNode TreeNode_2L = new TreeNode(9, new TreeNode(),new TreeNode());
        TreeNode TreeNode_1 = new TreeNode(3, TreeNode_2L, TreeNode_2R);

        Console.WriteLine(MaxDepth(TreeNode_1));
    }
    public static int MaxDepth(TreeNode? root)
    {
        if (root == null)
            return 0;
        if (root.Left == null && root.Right == null)
            return 1;
        if (root.Left == null)
            return MaxDepth(root.Right) + 1;
        if (root.Right == null)
            return MaxDepth(root.Left) + 1;
        return Math.Max(MaxDepth(root.Left), MaxDepth(root.Right))+1;
    }
}
public class TreeNode
{
    public int Data { get; set; }
    public TreeNode? Left { get; set; }
    public TreeNode? Right { get; set; }
    public TreeNode()
    {
        Left = null;
        Right = null;
    }
    public TreeNode(int data)
    {
        Data = data;
        Left = null;
        Right = null;
    }
    public TreeNode(int data, TreeNode Left, TreeNode Right)
    {
        Data = data;
        this.Left = Left;
        this.Right = Right; 
    }
}
